# ----------------------------------------------------------------------#
# KERnano                                                               #
# The No-Install Python Pen Testing Kit                                 #
#  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  #
# Copyright: exeCODEable, 2022                                          #
# Author: Ash Noor (ryn0f1sh.blog)                                      #
#  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  #
# This tool is for educational purposes.                                #
# We do not condone using this tool for any illegal activity.           #
# Make sure you have permission before Pen Testing any entity.          #
#  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  #
# Thank you for the support.                                            #
# Happy Hacking & Code The Planet                                       #
# www.exeCODEable.com  |  www.AshNoor.me  |  www.KERnano.com            #
#-----------------------------------------------------------------------#

# imports
from time import sleep

# Importing the local files
import Pentest_Tools.hlpr # HLPR
import Pentest_Tools.b64 # B64
import Pentest_Tools.TUC # The URL Checker
import Pentest_Tools.port_scanner # Port Scanner


# Kernano Package:
# Error Handling - The Int Checker
import Kernano_Package.Error_Handler
# The Kernanon Menu & Exit Kernano functions
import Kernano_Package.kp_main



# ------------------------------------------------------------
# Pen Test Menu Function

def ptt_menu():
    print("""
+-+-+-+-+-+-+-+-+-+-+
| Pen Testing Menu |
+-+-+-+-+-+-+-+-+-+-+

[1] HLPR ... (Helpful Linux Commands).
[2] B64 ... (Base64 Encoder/Decoder).
[3] The URL Checker ... (Site Live/SSL Checker). 
[4] Port Scanner ... (A Basic Port Scanner).
[5] Back to KERnano Menu.
[6] Exit KERnano.""")

    sleep(1)

    # Getting user input
    ptt_menu_choice = input("\nEnter Your Choice: ")

    # Send to The Checker for Error Handling
    # Re-assign the User's input with the value returned from The Checker
    ptt_menu_choice = Kernano_Package.Error_Handler.the_int_checker(ptt_menu_choice)

    if int(ptt_menu_choice) == 1:
        # HLPR Menu
        Pentest_Tools.hlpr.title()
    elif int(ptt_menu_choice) == 2:
        # B64 Menu
        Pentest_Tools.b64.b64_menu()
    elif int(ptt_menu_choice) == 3:
        # The URL Checker Menu
        Pentest_Tools.TUC.url_menu()
    elif int(ptt_menu_choice) == 4:
        # Port Scanner Menu
        Pentest_Tools.port_scanner.portScanner_menu()
    elif int(ptt_menu_choice) == 5:
        # Go back to Kernano's Main Menu
        Kernano_Package.kp_main.kernano_menu()

        # If User Input is rejected by the Error Handler
    elif ptt_menu_choice == -1:
        # Go back to the Pen Testing Menu
        ptt_menu()
        # If User Input is rejected by the Error Handler
    elif ptt_menu_choice == -2:
        # Go back to the Pen Testing Menu
        ptt_menu()

    else:
        # Exit the program
        Kernano_Package.kp_main.exit_kernano()

    # End of Pen Test Menu Function.
# ------------------------------------------------------------




# Calling function with Main Guard.
if __name__ == '__main__':
    ptt_menu() # The Pen Test Menu
